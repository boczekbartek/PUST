Zadanie 1

Udało nam się skomunikować sterownik z obiektem grzejąco-chłodzącym oraz oprogramowanie GxWorks3. Opis rejestrów sterownika:
Grzałki:
D100 - T1   (Y1) -> pomiar temperatury na grzałce G1 (np wartość 2300 oznacza 23 st C)
D102 - T3   (Y2) -> pomiar temperatury na grzałce G2

D114 - G1   (U1) -> sygnał sterujący grzałką G1 ( 0 - 1000 => 0-100%)
D115 - G2   (U2) -> sygnał sterujący grzałką G2 

Wiatraczki:
D110 - W1   -> sygnał sterujący wiatraczka W1   ( 0 - 1000 => 0-100%)
D111 - W2   -> sygnał sterujący wiatraczka W2

Aby ustalić punkt pracy wyprowadziliśmy obiekt z równowagi a następnie podaliśmy mu stałe sterowanie na obie grzałki, przy wiatraczkach ustawionych na 50% mocy.
Wartości sterowania:
G1 = 35 %
G2 = 40 %

Poniżej przedstawiony jest przebieg eksperymentu:

pliki: zadanie1_Y1/Y2 na jednym wykresie
pliki: zadanie1_U1/U2 na jednym wykresie

Jak widać wartości temperatur w punkcie pracy prezentują się następująco:
Y1 = 39 st C
Y2 = 42,5 st C

Zadanie 2
Na sterowniku zaimplementowaliśmy zabezpieczenie obiektu przed uszkodzeniem.
Jeśli odczyt z czujnika T1 > 150 st C ( czyli w rejestrze D100 > 15000) wyłączana jest grzałka 1,czyli do rejestru
D114 jest wpisywane 0.  
Analogicznie dla czujnika T1 oraz grzałki G2.

Zadanie 3

Nastawy PID:
(takie jak na labolatorium 3)
K1 = 1,228038; Ti1 = 11,602531; Td1 = 1,166250; Ts = 0,5; K2 = 0,851927; Ti2 = 9,777445; Td2 = 0,842038; Ts = 0,5;

W algorytmie zostały użyte wcześniej wyliczone w Matlabie paramtry RR12, RR10, RR10
RR22, RR21, RR20, tak aby zwolnić sterownik z obliczeń i prościć implementację.

Implementacja na sterowniku wraz z zabezpieczeniem opisanym w zadaniu 2.

//reg PID w domyśle
AWARIAY1 := FALSE;
AWARIAY2 := FALSE;
YZAD1 := 4000;
YZAD2 := 4000;
 
YY1 := INT_TO_REAL(D100);
YY2 := INT_TO_REAL(D102);
 
IF (YY1 >15000.0) THEN
    AWARIAY1 := TRUE;
END_IF;
 
IF (YY2 > 15000.0) THEN
    AWARIAY2 := TRUE;
END_IF;
 
IF (NOT AWARIAY1 AND NOT AWARIAY2) THEN
    YY1 := YY1-Y1pp;
    YY2 := YY2-Y2pp;
 
    EE1 := YZAD1-YY1;
    EE2 := YZAD2-YY2;
 
    du1 := (RR12*e1_2)+(RR11*e1_1)+(RR10*EE1);
    du2 := (RR22*e2_2)+(RR21*e2_1)+(RR20*EE2);
 
 
    UU1 := UU1+du1+U1pp;
    UU2 := UU2+du2+U2pp;
 
    e1_2 := e1_1;
    e2_2 := e2_1;
 
    e1_1 := EE1;
    e2_1 := EE2;
 
 
    D110 := 500;
    D111 := 500;
 
    IF (UU1>1000.0) THEN
        UU1 := 1000.0;
    END_IF;
       
    IF (UU1<0.0) THEN
        UU1 := 0.0;
    END_IF;
   
END_IF;
   
   
IF (UU2>1000.0) THEN
    UU2 := 1000.0;
END_IF;
   
IF (UU2<0.0) THEN
    UU2 := 0.0;
END_IF;
 
 
//ZACHOWANIE W PRZYPADKU AWARII
IF(AWARIAY1) THEN
    UU1 := 0.0;
END_IF;
IF(AWARIAY2) THEN
    UU2 := 0.0;
END_IF;
 
  
D114 := REAL_TO_INT(UU1);
D115 := REAL_TO_INT(UU2);

Na poniższych wykresach możemy zaobserwować działanie regulatora dla wartości zadnej
dla obu temperatur, T1 oraz T3 = 50 st C. Początkowy stan wynosił ok. T1 = T3 = 25 st C.

wykres zadanie3_Y1/Y2/Y1zad/Y2zad na jednym
wykres zadanie3_U1/U2 na drugim

Zadanie 5

Obrazek Zadanie5.jpg

Zaprojektowaliśmy prosty interfejs użytkownika do monitorowania stanowiska grzejąco chłodzącego.
Od lewej: 
Kolor różowy Y1 -> pomiar temperatury T1, zakres: (0 st C - pusty słupek, 100 st C - pełny słupek) 
Kolor różowy Y1ZAD -> wartośc zadane temperatury T1 zakres jw.
Kolor zielony Y2 -> pomiar temperatury T3, zakres: (0 st C - pusty słupek, 100 st C - pełny słupek) 
Kolor zileony Y2ZAD -> wartośc zadane temperatury T2 zakres jw.
Kolor żółty U1 -> wartośc sterowania podana na grzałkę G1, zakres (0 % - pusty słupek, 100 % - pełny słupek)
Kolor żółty U2 -> wartośc sterowania podana na grzałkę G2, zakres (0 % - pusty słupek, 100 % - pełny słupek)

Panel jest dostępny po wciśnięcu po prawej stronie przycisku MENU, a następnie przycisku PID.

Zadanie 7
Udało nam się skonfigurować połączenie obiekty Inteco -> serwomechanizmu ze sterwonikiem.

Konfigurację oparliśmy o tablekę wejść i wyjśc zamieszczoną na stronie przedmiotu jak i przedstawioną poniżej:
AIN1
Potentiometer Analogowy sygnał pomiarowy z potencjometru
(zadajnik położenia, prędkości kątowej itp.).
AIN2 - Tacho Analogowy sygnał pomiarowy prędkości obrotowej z tachoprądnicy.
X2  - Therm Flaga limitu temperatury.
X1 - EncB1 Enkoder inkrementalny, fala B, oś pozioma.
X0 - EncA1 Enkoder inkrementalny, fala A, oś pozioma.

PWM  - Sygnał sterujący typu PWM dla silnika DC.
Y0  - Zalecana częstotliwość tego sygnału mieści się w przedziale (5-15) kHz.
Y1  - Brake Sygnał zatrzymujący pracę silnika DC.
Y2  - Dir0 Sygnał zmiany kierunku obrotów silnika DC.

Wymagane było również dodanie wejścia analogowego w zakładce Module Configuration. Postępując zgodnie
z punktem 3.9 pliku "Laboratorium 5 – instrukcja do obiektów Inteco" udało nam się podłączyć obiekt.

Następnie skonfigurowaliśmy wejście licznikowe - pomiar czestotliwości oraz PWM dla wejść Y0 -> sterowanie tachoprądnicy, Y1 -> sygnał hamujący, również w sposób opisany w instrukcji.

Wyłączając hamowanie ( podanie 0 na pole EN bloczka PWM dla Y1) oraz manipulując wartością parametru K100 bloczka 
PWM dla Y0 udało nam się wprawić w ruch elementy obrotowe serwa.

Dowodem na ten fakt jest załączony do sprawozdanie film.


